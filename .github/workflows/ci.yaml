name: CI
on:
  push: 
    branches:
      - main
  pull_request:

jobs:
  interface:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    defaults:
      run:
        working-directory: ./interface
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm

      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: Install dependencies
        run: yarn install --nonInteractive --frozen-lockfile --prefer-offline

      - name: Build
        run: yarn build

  getImplementations:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ env.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - id: set-matrix
        run: echo "matrix=$(./scripts/getImplementations.sh)" >> $GITHUB_ENV

  implementations-ci:
    runs-on: ubuntu-latest
    needs:
      - interface
      - getImplementations
    strategy:
      matrix: ${{fromJSON(needs.getImplementations.outputs.matrix)}}
    defaults:
      run:
        working-directory: ./implementations/${{ matrix.package }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
        working-directory: ./interface

      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: Install dependencies
        run: yarn install --nonInteractive --frozen-lockfile --prefer-offline
        working-directory: ./interface

      - name: Build
        run: yarn build
        working-directory: ./interface

      - name: Install dependencies
        run: yarn install --nonInteractive --frozen-lockfile --prefer-offline

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test
